# ======================================================================
# pyCREAの使用例
# 受講生の解答の正規表現に対して「正答の可能性が高い or 誤答である」を判定する
# (正答と受講生の解答を引数に渡すことで1個の解答の判定を行う)
#
# 正規表現の記法は以下の書籍に準じる
# 丸岡 章. 計算理論とオートマトン言語理論 [第2版]. サイエンス社, 2021年.
# ======================================================================
import pyCREA

# 解答を判定したい問題についての準備
correct = "(0+1)*11"  # 正答の正規表現 (0+1)*11
alphabet = ["0", "1"]  # 正規表現を構成するアルファベット Σ={0,1}
length = 10  # この長さ以下の系列を判定する

# 受講生の解答の正規表現 (0+1+00+11+01+10)*111* に対する判定
ans = "(0+1+00+11+01+10)*111*"  # 受講生の解答の正規表現
pyCREA.check(correct, ans, alphabet, length)  # 判定

# 受講生の解答の正規表現 0(0+1)*11 に対する判定
ans = "0(0+1)*11"  # 受講生の解答の正規表現
pyCREA.check(correct, ans, alphabet, length)  # 判定

# 受講生の解答の正規表現 ε に対する判定
ans = "ε"  # 受講生の解答の正規表現
pyCREA.check(correct, ans, alphabet, length)  # 判定

# 受講生の解答の正規表現 (ε+0+1)*
ans = "(ε+0+1)*"  # 受講生の解答の正規表現
pyCREA.check(correct, ans, alphabet, length)  # 判定
